name: Destroy Dev Staging Environment

on:
  workflow_dispatch:
    inputs:
      PR_number:
        description: 'Pull request number'
        required: true

jobs:
  create:
    name: 'Create staging and deploy'
    defaults:
      run:
        shell: bash
    
    runs-on: ubuntu-latest

    steps:
    - name: Verify Pull Request Number
      uses: actions/github-script@v5
      id: verify_pr_number
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        result-encoding: string
        script: |
          const response = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ github.event.inputs.PR_number }}
          });
          
          // Check if the pull request is open
          if (response.data.number !== ${{ github.event.inputs.PR_number }}) {
            throw new Error('Pull request is not open or number is not valid!');
          } else {
            console.log("PR ref: " + response.data.head.ref);
            return response.data.head.ref;
          }

    # ======================================================
    # Checkout the infra repository
    # ======================================================
    - uses: actions/checkout@v2
      name: 'Checkout infrastructure repository'
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.      
        repository: AndresDavidArcos/QuackyNotesInfra

    # ======================================================
    # Terraform setup
    # 
    # - secrets.TERRAFORM_API_TOKEN: is the Terraform
    # Cloud API Token.
    # ======================================================
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11
        cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

    - name: Eliminar archivos terraform asociados a el PR_number
      working-directory: staging/
      run: |
        rm -f *PR_${{ github.event.inputs.PR_number }}.tf

    - name: Terraform Init and Validate
      id: init
      working-directory: staging/
      run: |
        terraform init
        terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      working-directory: staging/
      continue-on-error: true
    
    # ======================================================
    # Once Terraform Plan is completed we need to update
    # the PR with the results of the plan
    # ======================================================
    - name: Update Pull Request
      uses: actions/github-script@v5
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: ${{ github.event.inputs.PR_number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
          
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      id: apply
      working-directory: staging/
      run: terraform apply -auto-approve

    - name: Commit terraform resource files to the PR
      working-directory: staging/      
      run: |
        git config --global user.name '${{ github.actor }}'
        git config --global user.email '${{ github.actor}}@users.noreply.github.com'
        git add ./\*.tf
        git commit -m "Deleting terraform resource files"

    - name: Push changes to the infra repo
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.INFRA_TOKEN }}
        repository: AndresDavidArcos/QuackyNotesInfra

    # ======================================================
    # When we're done, we need to update the PR one more time
    # with the results of the apply.
    # ======================================================      
    - name: Update status
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Staging server deleted
          > PR #${{ github.event.inputs.PR_number }} has been undeployed successfully;

          github.rest.issues.createComment({
            issue_number: ${{ github.event.inputs.PR_number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

